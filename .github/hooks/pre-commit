#!/bin/sh

#################### 공통 스크립트 ####################

# 변경된 파일 리스트 읽어오기
files=$(git diff --cached --name-only --diff-filter=ACM)

# 프론트엔드 파일 필터링
# info) grep ... : js, ts, jsx, tsx 확장자 파일만 선택
# info) sed ... : 파일 경로에서 frontend/ 제거
frontend_files=$(echo "$files" | grep -E "^frontend/.*\.(js|ts|jsx|tsx)$" | sed 's|^frontend/||')
# 백엔드 파일 필터링
# !!! 확장자 수정해 주세요(문법 검사할 파일들) !!!
backend_files=$(echo "$files" | grep -E "^backend/.*\.(java|yml)$" | sed 's|^backend/||')

# 현재 브랜치 이름 get
current_branch_name=$(git rev-parse --abbrev-ref HEAD)

# 브랜치에서 fe|be 부분만 추출
part=$(echo "$current_branch" | cut -d'/' -f2)

#################### 프론트엔드 스크립트 ####################

if [ "$part" = "fe" ]; then
  # eslint 실행을 위해 frontend 폴더로 이동
  cd frontend

  echo "[pre-commit] ⏳ Checking lint for staged files..."
  # Lint fix 실행
if ! pnpm exec eslint --fix $frontend_files; then
  echo "[pre-commit] ❌ Lint errors remain after fixing. Commit aborted."
  exit 1
fi

  # Lint로 fix된 파일들을 다시 스테이징
  echo "[pre-commit] Staging fixed files..."
  echo "$frontend_files" | xargs git add

  echo "[pre-commit] ✅ Lint passed. Proceeding with commit."
  echo ""
fi



#################### 백엔드 스크립트 ####################

if [ "$part" = "be" ]; then
  cd backend

  # Do something
fi


#################### 성공 분기 ####################

exit 0
