plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'endolphin'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// db
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("installLocalGitHook", Copy) {
	def rootDir = file("${rootProject.rootDir}/..")
	def hooksDir = file("${rootDir}/.github/hooks")   // .github/hooks 위치
	def gitHooksDir = file("${rootDir}/.git/hooks")   // .git/hooks 위치

	if (!hooksDir.exists() || hooksDir.list().length == 0) {
		println "[installLocalGitHook] ⚠️ No hook files found in .github/hooks. Skipping task."
		return
	}

	from hooksDir
	into gitHooksDir

    eachFile {
        it.mode = 0755
    }

	outputs.upToDateWhen { false }

	doLast {
		println "[installLocalGitHook] ✅ Git hooks installed successfully."
	}
}

tasks.named("build") {
	dependsOn tasks.named("installLocalGitHook")
}
